#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.3/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         127.0.0.1 local2 
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    nbproc      1
    user        §[wsOwnerLogin]§
    group       §[wsOwnerGroup]§
    daemon

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will 
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log         global
    retries     3
    timeout     connect 10000		# default 10 second time out if a backend is not found
    timeout     client  300000
    timeout     server  300000
    mode        http
    option      dontlognull
    option      httpclose		# Disable Keepalive - required for sticky session
    option      forwardfor		# This sets X-Forwarded-For
    option      redispatch
    option      httpchk
    option      httplog
    balance     roundrobin		# Load Balancing algorithm
    cookie      JSESSIONID prefix	# This cookie will be used for sticky session


frontend fe-http_proxy
    bind        §[wsListenIp]§:§[wsListenPort]§
§[
	string-join(
		for $application in melody:getHeritedContent(§[srv]§, '/§[haproxy_node]§/applications/application')
		return concat(	'    ', '# backend switch for application "', replace($application/@name, '[.-]', '_'), '"', codepoints-to-string(10),
				'    ', 'acl         ', 'acl-', replace($application/@name, '[.-]', '_'), ' path_beg ', '/', $application/@name, codepoints-to-string(10),
				'    ', 'use_backend ', 'be-', replace($application/@name, '[.-]', '_'), ' if ', 'acl-', replace($application/@name, '[.-]', '_') ),
		codepoints-to-string(10) )
]§

§[
	string-join(
		for $application in melody:getHeritedContent(§[srv]§, '/§[haproxy_node]§/applications/application')
		return concat(	'# backend for application "', replace($application/@name, '[.-]', '_'), '"', codepoints-to-string(10),
				'backend ', 'be-', replace($application/@name, '[.-]', '_'), codepoints-to-string(10),
				string-join(
					for $srv in ./environment//instance[ melody:getHeritedContent(., concat('[exists(§[backend_instance_node]§/applications/application[@name="',$application/@name,'"] )]')) ]
					return	string-join(
							for $backend_instance in melody:getHeritedContent($srv, concat('/§[backend_instance_node]§ [ applications/application[@name="',$application/@name,'"] ]'))
							return concat(	'    ', 
									'server', 
									' ', 
									replace(melody:getNetworkDeviceElementByName($srv, $backend_instance/listen-on/@device)/@ip, '[.]', '_'),
									'_',
									8080 + $backend_instance/listen-on/@port-offset,
									' ',
									melody:getNetworkDeviceElementByName($srv, $backend_instance/listen-on/@device)/@ip,
									':',
									8080 + $backend_instance/listen-on/@port-offset,
									' cookie ',
									replace(melody:getNetworkDeviceElementByName($srv, $backend_instance/listen-on/@device)/@ip, '[.]', '_'),
									'_',
									8080 + $backend_instance/listen-on/@port-offset,
									' weight 1 maxconn 512 check' ), 
							codepoints-to-string(10) ),
					codepoints-to-string(10) ),
				codepoints-to-string(10) ),
			codepoints-to-string(10) )
]§
