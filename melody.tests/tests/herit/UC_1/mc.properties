####################################################
### CUSTOM CONFIGURATION DIRECTIVES

### 'rootFolderPath' is a custom configuration directive used to eliminate redundancy in folder declaration
rootFolderPath=./melody.tests/

####################################################
### MANDATORY CONFIGURATION DIRECTIVES

####################################################
### MANDATORY CONFIGURATION DIRECTIVES

### The canonical class name of the Processor Manager 
processorManagerCanonicalClassName=com.wat.melody.core.internal.ProcessorManager

### Folder where temporary files are stored
### 'UUID' is a special configuration directive automatically added by Melody,
### 'UUID' can be used to generate unique folder.
workingFolderPath=${rootFolderPath}/tmp/${UUID}/

### Specifies the maximum step amount which can be run simultaneously.
### Must be a positive integer; 0 means 'no limit'
maxSimultaneousStep=8

### When killing Melody, all running steps must be killed to.
### 'hardKillTimeout' is the number of seconds Melody will wait for steps to terminate normaly.
### After 'hardKillTimeout' seconds are elapsed, all running steps are killed.
### Must be a positive integer; 0 means 'infinite'
hardKillTimeout=50


####################################################
### LOG4J CONFIGURATION DIRECTIVES
### needed for log4j loading

### The path to the log4j configuration file (an xml file is required)
loggingConfigurationFile=${rootFolderPath}/config/log4j.xml
loggingVariablesToSubstitute=log4j.logFilePath,log4j.defaultLoggingLevel

### Folder where logs are generated
log4j.logFilePath=${rootFolderPath}/logs/melody.log

### Log threshold
### Can be altered by Command Line Options -v and -q
### Accepted values : ALL; TRACE; DEBUG; INFO; WARN; ERROR; FATAL; OFF
log4j.defaultLoggingLevel=WARN


####################################################
### PLUGIN CONFIGURATION DIRECTIVES
### needed for Plug-In loading

### List Configuration Directives which will contains Task Java Classes
tasks.directives=tasks.standard

### Standard Tasks Java Classes
tasks.standard=com.wat.melody.plugin.echo.Echo,com.wat.melody.plugin.sleep.Sleep

### list all Plugin Configuration Directive
### comma separated list
#plugin.configuration.directives=


####################################################
### CUSTOM XPATH FUNCTIONS CONFIGURATION DIRECTIVES
### needed for custom xpath functions resolution

### List Configuration Directives which will contains Custom XPath NameSpace
xpath.namespace.directives=xpath.namespace.standard

### Standard XPath NameSpaces
xpath.namespace.standard=xpath.namespace.melody

xpath.namespace.melody.uri=http://localhost/melody

### List Configuration Directives which will contains Custom XPath Function
xpath.function.directives=xpath.function.standard

### Standard XPath Functions
xpath.function.standard=\
xpath.function.getHeritedAttributeValue,\
xpath.function.getHeritedContent,\
xpath.function.getManagementNetworkDevice,\
xpath.function.getManagementNetworkDeviceName,\
xpath.function.getManagementNetworkHost,\
xpath.function.getManagementNetworkPort,\
xpath.function.getManagementNetworkMethod,\
xpath.function.getNetworkDeviceByName.1arg,\
xpath.function.getNetworkDeviceByName.2arg

xpath.function.getHeritedAttributeValue.namespace.uri=${xpath.namespace.melody.uri}
xpath.function.getHeritedAttributeValue.class=com.wat.melody.xpathextensions.GetHeritedAttribute
xpath.function.getHeritedAttributeValue.arity=2

xpath.function.getHeritedContent.namespace.uri=${xpath.namespace.melody.uri}
xpath.function.getHeritedContent.class=com.wat.melody.xpathextensions.GetHeritedContent
xpath.function.getHeritedContent.arity=2

xpath.function.getManagementNetworkDevice.namespace.uri=${xpath.namespace.melody.uri}
xpath.function.getManagementNetworkDevice.class=com.wat.melody.cloud.network.xpathfunctions.GetManagementNetworkDevice
xpath.function.getManagementNetworkDevice.arity=1

xpath.function.getManagementNetworkDeviceName.namespace.uri=${xpath.namespace.melody.uri}
xpath.function.getManagementNetworkDeviceName.class=com.wat.melody.cloud.network.xpathfunctions.GetManagementNetworkDeviceName
xpath.function.getManagementNetworkDeviceName.arity=1

xpath.function.getManagementNetworkHost.namespace.uri=${xpath.namespace.melody.uri}
xpath.function.getManagementNetworkHost.class=com.wat.melody.cloud.network.xpathfunctions.GetManagementNetworkHost
xpath.function.getManagementNetworkHost.arity=1

xpath.function.getManagementNetworkPort.namespace.uri=${xpath.namespace.melody.uri}
xpath.function.getManagementNetworkPort.class=com.wat.melody.cloud.network.xpathfunctions.GetManagementNetworkPort
xpath.function.getManagementNetworkPort.arity=1

xpath.function.getManagementNetworkMethod.namespace.uri=${xpath.namespace.melody.uri}
xpath.function.getManagementNetworkMethod.class=com.wat.melody.cloud.network.xpathfunctions.GetManagementNetworkMethod
xpath.function.getManagementNetworkMethod.arity=1

xpath.function.getNetworkDeviceByName.1arg.namespace.uri=${xpath.namespace.melody.uri}
xpath.function.getNetworkDeviceByName.1arg.name=getNetworkDeviceByName
xpath.function.getNetworkDeviceByName.1arg.class=com.wat.melody.cloud.network.xpathfunctions.GetNetworkDeviceByName
xpath.function.getNetworkDeviceByName.1arg.arity=1

xpath.function.getNetworkDeviceByName.2arg.namespace.uri=${xpath.namespace.melody.uri}
xpath.function.getNetworkDeviceByName.2arg.name=getNetworkDeviceByName
xpath.function.getNetworkDeviceByName.2arg.class=com.wat.melody.cloud.network.xpathfunctions.GetNetworkDeviceByName
xpath.function.getNetworkDeviceByName.2arg.arity=2


####################################################
### OPTIONNAL CONFIGURATION DIRECTIVES
### Can be override by the command line options

### Path of the Resources Descriptor
### Can be override by Command Line Option -E <Resources Descriptor File Path>
resourcesDescriptors=rd1
rd1=${rootFolderPath}/tests/herit/UC_1/ed.xml

### Batch mode : when enabled, will answer yes to any questions without prompting
### Can be override by Command Line Option -b / -B
### Accepted values : false - disable; true - enable
#batchMode=true

### Preserve Temporary File mode : when enabled, will not delete any temporary files (useful for investigation)
### Can be override by Command Line Option -p / -P
### Accepted values : false - disable; true - enable
#preserveTemporaryFilesMode=false

### Run Dry mode : when enabled, will only check everything, instead of processing the sequence for real
### Can be override by Command Line Option -d / -D
### Accepted values : false - disable; true - enable
#runDryMode=true

### Path of the TarGz archive or Sequence Descriptor file
### Can be override by Command Line Option -f <TarGz Archive or Sequence Descriptor File Path>
sequenceDescriptorFilePath=${rootFolderPath}/tests/herit/sd.xml

### Path of the specific configuration
### Can be override by Command Line Option -C <Specific Configuration File Path>
#specificConfigurationFilePath=

### The orders to process
### Can be override by Command Line Option -o <Orders>
### Accepted values : one or more order specified in the sequence descriptor (see Command Line Argument <sequenceDescriptorFilePath>), separated by a comma.
#orders=

### The properties to pass to the process
### Can be override by Command Line Option -V <Property>
### Accepted values : one or more string of the form '<name>=<value>', separated by a comma.
#properties=

### The Resources filters
### Can be override by Command Line Option -F <Filter>
### Accepted values : one or more XPath expression, separated by a comma.
resourcesFilters=resourcesFilter.1
resourcesFilter.1=./environment/DEV

### The target filters
### Can be override by Command Line Option -T <Filter>
### Accepted values : one or more XPath expression, separated by a comma.
targetFilters=targetFilter.1
targetFilter.1=/resources/environment//FRONTS
