VolumeStateEx_EMPTY=''{0}'': Not accepted. Since this value is an empty String, such value is not a valid VolumeStateE.

VolumeStateEx_INVALID=''{0}'': Not accepted. Since this value is not one of {1}, such value is not a valid VolumeState.


VolumeAttachmentStateEx_EMPTY=''{0}'': Not accepted. Since this value is an empty String, such value is not a valid VolumeAttachmentState.

VolumeAttachmentStateEx_INVALID=''{0}'': Not accepted. Since this value is not one of {1}, such value is not a valid VolumeAttachmentState.


ConfEx_MISSING_DIRECTIVE=Configuration Directive ''{0}'' is missing.

ConfEx_INVALID_DIRECTIVE=Configuration Directive ''{0}'' is not valid.

ConfEx_EMPTY_DIRECTIVE=Cannot be empty.

ConfEx_INVALID_CONNECTION_TIMEOUT=''{0}'': Not accepted. Since this value is neither a Positive Integer nor zero, such value is not a valid Socket Connection timeout. \
Also note that 0 represents an infinite timeout.

ConfEx_INVALID_READ_TIMEOUT=''{0}'': Not accepted. Since this value is neither a Positive Integer nor zero, such value is not a valid socket Read Timeout. \
Also note that 0 represents an infinite timeout.

ConfEx_INVALID_RETRY=''{0}'': Not accepted. Since this value is neither a Positive Integer nor zero, such value is not a valid Retry Amount. \
Also note that 0 means there will be no retry.

ConfEx_INVALID_MAX_CONN=''{0}'': Not accepted. Since this value is neither a Positive Integer nor zero, such value is not a valid Maximum Connection. \
Also note that 0 means there will be no limit to the number of connections.

ConfEx_INVALID_SEND_BUFFSIZE=''{0}'': Not accepted. Since this value is not a Positive Integer, such value is not a valid Send Buffer Size. \
Also note that a value inferior than 10000 is not adapted in most situations.

ConfEx_INVALID_RECEIVE_BUFFSIZE=''{0}'': Not accepted. Since this value is not a Positive Integer, such value is not a valid Receive Buffer Size. \
Also note that a value inferior than 10000 is not adapted in most situations.

ConfEx_INVALID_PROTOCOL=''{0}'': Not accepted. Since this value is not one of {1}, such value is not a valid Protocol.

ConfEx_INVALID_PROXY_HOST=''{0}'': Not accepted. Since this value cannot be resolved by the Name Service, such value is not a valid Proxy Host.

ConfEx_INVALID_PROXY_PORT=''{0}'': Not accepted. Since this value is not a Positive Integer, such value is not a valid Proxy Port.

ConfEx_CONF_NOT_REGISTERED=The {0} Plug-In Configuration have not been registered \! \
To solve this issue, you must register the {0} Plug-In Configuration. \
To register the {0} Plug-In Configuration, follow these steps : TODO

ConfEx_CONF_REGISTRATION_ERROR=A Plug-In Configuration that was registered with the name ''{0}'' have been found, but it is not the {0} Plug-In Configuration \! \
To solve this issue, be sure the that the Configuration Directive ''{1}'' of the file ''{2}'' is equal to ''{3}''.

ConfEx_INVALID_AWS_CREDENTIALS=Cannot connect to Aws EC2 with the given Aws Credentials (e.g. accessKey: {0} / secretKey : {1}). \
Check for your Aws Credentials defined in the Configuration Directives ''{2}'' and ''{3}'' in the Aws EC2 Plug-In Configuration File located at ''{4}''.

ConfEx_VALIDATION=Cannot connect to Aws EC2 with the given Aws Configuration. \
Read messages below to get more details about the issue.


CommonMsg_WAIT_FOR_INSTANCE_STATE=Waiting for Aws Instance ''{0}'' to become ''{1}''. Currently ''{2}''.
CommonMsg_WAIT_FOR_INSTANCE_STATE_FAILED=Aws Instance ''{0}'' is still not ''{1}'' after {2} seconds.
CommonMsg_WAIT_FOR_INSTANCE_STATE_SUCCEED=Aws Instance ''{0}'' reaches the state ''{1}'' in less than {2} seconds.

CommonMsg_WAIT_FOR_VOLUME_STATE=Waiting for Aws Volume ''{0}'' to become ''{1}''. Currently ''{2}''.
CommonMsg_WAIT_FOR_VOLUME_STATE_FAILED=Aws Volume ''{0}'' is still not ''{1}'' after {2} seconds.
CommonMsg_WAIT_FOR_VOLUME_STATE_SUCCEED=Aws Volume ''{0}'' reaches the state ''{1}'' in less than {2} seconds.

CommonMsg_WAIT_FOR_VOLUME_ATTACHEMENT_STATE=Waiting for Aws Volume ''{0}'' attachment to become ''{1}''. Currently ''{2}''.
CommonMsg_WAIT_FOR_VOLUME_ATTACHEMENT_STATE_FAILED=Aws Volume ''{0}'' attachment is still not ''{1}'' after {2} seconds.
CommonMsg_WAIT_FOR_VOLUME_ATTACHEMENT_STATE_SUCCEED=Aws Volume ''{0}'' attachment reaches the state ''{1}'' in less than {2} seconds.


MachineEx_MISSING_REGION_ATTR=[{3}] No Region provided. \
To solve this issue, either add a ''{0}'' XML attribute in the Task ''{1}'' and assign it the desired Aws Region \
or add  a ''{2}'' XML attribute to the target Aws Instance Node and assign it the desired Aws Region.

MachineEx_REGION_ERROR=[{1}] The Aws {0} provided for this Aws Instance Node is not valid.

MachineEx_INVALID_REGION_ATTR=''{0}'': Not accepted. \
Since this value has been rejected by Aws, such value is not a valid Aws Region.

MachineEx_INVALID_TIMEOUT_ATTR=''{0}'': Not accepted. Must be a Long. \
It represents the amount of milliseconds to wait for the operation to be done. \
Also note that 0 is allowed and means the wait is infinite.

MachineEx_INVALID_TARGET_ATTR_NOT_XPATH=''{0}'': Not accepted. \
This value is not a valid XPath Expression. \
To solve this issue, write an XPath Expression which select a sole element node in the Resources Descriptor.

MachineEx_INVALID_TARGET_ATTR_NO_NODE_MATCH=''{0}'': Not accepted. \
This XPath Expression doesn't select any node. \
To solve this issue, write an XPath Expression which select a sole element node in the Resources Descriptor.

MachineEx_INVALID_TARGET_ATTR_MANY_NODES_MATCH=''{0}'': Not accepted. \
This XPath Expression selects {1} nodes. \
To solve this issue, write an XPath Expression which select a sole element node in the Resources Descriptor.

MachineEx_INVALID_TARGET_ATTR_NOT_ELMT_MATCH=''{0}'': Not accepted. \
This XPath Expression selects a {1} node. \
To solve this issue, write an XPath Expression which select a sole element node in the Resources Descriptor.

MachineEx_TOO_MANY_TAG_MGNT=[{3}] Aws Instance Node has too many ''{0}'' tags. \
When ''{1}'' is set to true, the Aws Instance Node must have one tag ''{0}'' equals to one of the following value {2}.

MachineEx_NO_TAG_MGNT=[{3}] Aws Instance Node has no ''{0}'' tag. \
When ''{1}'' is set to true, the Aws Instance Node must have one tag ''{0}'' equals to one of the following value {2}.

MachineEx_INVALID_TAG_MGNT=[{1}] The tag ''{0}'' provided for this Aws Instance Node is not valid.

MachineEx_INVLIAD_TAG_MGNT_WINRN_SUPPORT=[{2}] Tag ''{0}'' doesn''t support value ''{1}'' yet.

MachineEx_TOO_MANY_TAG_MGNT_PORT=[{4}] Aws Instance Node has too many ''{0}'' tags. \
When ''{1}'' is set to true, and Aws Instance Node ''{2}'' tag is equal to ''{3}'', the Aws Instance Node must have a tag ''{0}'' equals to the listen port of the Ssh daemon.

MachineEx_NO_TAG_MGNT_PORT=[{4}] Aws Instance Node has no ''{0}'' tag. \
When ''{1}'' is set to true, and Aws Instance Node ''{2}'' tag is equal to ''{3}'', the Aws Instance Node must have a tag ''{0}'' equals to the listen port of the Ssh daemon.

MachineEx_INVALID_TAG_MGNT_PORT=[{1}] The tag ''{0}'' provided for this Aws Instance Node is not valid.

MachineEx_ENABLE_SSH_MGNT_TIMEOUT=[{2}] Enable Management timeout for Aws instance ''{0}''. You should increase the ''{1}''.

MachineEx_TIMEOUT=[{4}] Aws Instance ''{0}'' fail to complete the ''{1}'' Operation in {2} milliseconds. You should increase the ''{3}'' of the Task ''{1}''.

MachineEx_MANAGEMENT_ENABLE_FAILED=[{1}] Failed to enable Network Management for Aws Instance ''{0}''.
MachineEx_MANAGEMENT_DISABLE_FAILED=[{1}] Failed to disable Network Management for Aws Instance ''{0}''.
MachineMsg_MANAGEMENT_ENABLE_BEGIN=Enabling {0} management for instance ''{1}''.
MachineMsg_MANAGEMENT_ENABLE_SUCCESS={0} management successfully enabled for instance ''{1}''.
MachineMsg_MANAGEMENT_DISABLE_BEGIN=Disabling {0} management for instance ''{1}''.
MachineMsg_MANAGEMENT_DISABLE_SUCCESS={0} management successfully disabled for instance ''{1}''.


NewEx_MISSING_IMAGEID_ATTR=[{3}] No AMI ID provided. \
To solve this issue, either define a ''{0}'' XML attribute in the Task ''{1}'' and assign it the desired AMI ID \
or define a ''{2}'' XML attribute to the target Aws Instance Node and assign it the desired AMI ID.

NewEx_IMAGEID_ERROR=[{1}] The {0} provided for this Aws Instance Node is not valid.

NewEx_INVALID_IMAGEID_ATTR=''{0}'': Not accepted. \
Cannot found such Aws AMI Id in the Region ''{1}''.

NewEx_MISSING_INSTANCETYPE_ATTR=[{3}] No Aws Instance Type provided. \
To solve this issue, either define a ''{0}'' XML attribute in the Task ''{1}'' and assign it the desired Aws Instance Type \
or define a ''{2}'' XML attribute to the target Aws Instance Node and assign it the desired Instance Type.

NewEx_INSTANCETYPE_ERROR=[{1}] The {0} provided for this Aws Instance Node is not valid.

NewEx_INVALID_INSTANCETYPE_ATTR=''{0}'': Not accepted. \
This value is not a valid Aws Instance Type.

NewEx_AVAILABILITYZONE_ERROR=[{1}] The {0} provided for this Aws Instance Node is not valid.

NewEx_INVALID_AVAILABILITYZONE_ATTR=''{0}'': Not accepted. \
This value is not a valid Aws Availability Zone. \
It represents the Availability Zone where the new Aws Instance will be located.

NewEx_MISSING_KEYPAIR_NAME_ATTR=[{3}] No KeyPair Name provided. \
To solve this issue, either define a ''{0}'' XML attribute in the Task ''{1}'' and assign it the desired KeyPair Name or \
define a ''{2}'' XML attribute to the target Aws Instance Node and assign it the desired KeyPair Name.

NewEx_KEYPAIR_NAME_ERROR=[{1}] The {0} provided for this Aws Instance Node is not valid.

NewEx_EMPTY_KEYPAIR_NAME_ATTR=''{0}'': Not accepted. Since this value is an empty String, such value is not a valid Aws KeyPair Name.

NewEx_INVALID_KEYPAIR_NAME_ATTR=''{0}'': Not accepted. Since this value doesn''t respect the pattern ''{1}'', such value is not a valid Aws KeyPair Name.

NewEx_INVALID_KEYPAIR_REPO_ATTR=''{0}'': Not accepted. Since this value doesn''t point to a valid Directory, such value is not a valid KeyPair Repository Path.

NewEx_FAILED=[{4}] Failed to create a new Aws Instance with the following characteristics \
region:{0}, ami-id:{1}, type:{2}, keypair: {3}. 

NewMsg_LIVES=[{2}] Aws Instance ''{0}'' is already in the ''{1}'' state. No need to create it.


StartEx_NO_INSTANCE=[{3}] No Aws Instance referenced. No Aws Instance to start. \
''{0}'' Task failed. \
To solve this issue, you should first create an Aws Instance, using the ''{1}'' Task defined in the package ''{2}''.

StartEx_SHUTTING_DOWN=[{5}] Aws Instance ''{0}'' is in the ''{1}'' state. Cannot start Aws Instance. \
''{2}'' Task failed. \
To solve this issue, you should first create an Aws Instance, using the ''{3}'' Task defined in the package ''{4}''.

StartEx_TERMINATED=[{5}] Aws Instance ''{0}'' is in the ''{1}'' state. Cannot start Aws Instance. \
''{2}'' Task failed. \
To solve this issue, you should first create an Aws Instance, using the ''{3}'' Task defined in the package ''{4}''.

StartMsg_PENDING=[{3}] Aws Instance ''{0}'' is in the ''{1}'' state. Waiting for the instance to reach the ''{2}'' state.

StartMsg_RUNNING=[{2}] Aws Instance ''{0}'' is in the ''{1}'' state. No need to start it.

StartMsg_STOPPING=[{3}] Aws Instance ''{0}'' is in the ''{1}'' state. Waiting for the instance to reach the ''{2}'' state.


StopEx_NO_INSTANCE=[{3}] No Aws Instance referenced. No Aws Instance to stop. \
''{0}'' Task failed. \
To solve this issue, you should first create an Aws Instance, using the ''{1}'' Task defined in the package ''{2}''.

StopMsg_ALREADY_STOPPED=[{2}] Aws Instance ''{0}'' is already in the ''{1}'' state. No need to stop it.


DeleteMsg_NO_INSTANCE=[{0}] No Aws Instance referenced. No Aws Instance to delete.

DeleteMsg_TERMINATED=[{2}] Aws Instance ''{0}'' is already in the ''{1}'' state. No need to delete it.


IngressEx_INVALID_FWRULE_XPATH=''{0}'': Not accepted. Since this value is not a valid XPath Expression, such value is not a valid. \
Replace it with an XPath Expression, which match some FwRule Nodes.

IngressMsg_NO_INSTANCE=[{2}] No Aws Instance referenced. No Aws Instance to ingress. \
You should first create an Aws Instance using ''{0}'' Task defined in the package ''{1}''.

IngressMsg_DENY_NA=[{3}] Rule ''{0}'' skipped. \
''{1}'' Task doens''t handle ''{2}'' Rules.

IngressMsg_FWRULES_DIGEST=[{4}] Aws Instance ''{0}'' Ingress are {1} ( \
Need to authorize : {2}, \
Need to revoke : {3} \
).


ResizeEx_MISSING_INSTANCETYPE_ATTR=[{3}] No Aws Instance Type provided. \
To solve this issue, either define a ''{0}'' XML attribute in the Task ''{1}'' and assign it the desired Aws Instance Type \
or define a ''{2}'' XML attribute to the target Aws Instance Node and assign it the desired Instance Type.

ResizeEx_INSTANCETYPE_ERROR=[{1}] The {0} provided for this Aws Instance Node is not valid.

ResizeEx_INVALID_INSTANCETYPE_ATTR=''{0}'': Not accepted. \
This value is not a valid Aws Instance Type.

ResizeEx_NO_INSTANCE=[{3}] No Aws Instance referenced. No Aws Instance to resize. \
''{0}'' Task failed. \
To solve this issue, you should first create an Aws Instance, using the ''{1}'' Task defined in the package ''{2}''.

ResizeEx_NOT_STOPPED=[{5}] Aws Instance ''{0}'' is not in the ''{1}'' state. \
''{2}'' Task failed. \
To solve this issue, you should first stop an Aws Instance, using the ''{3}'' Task defined in the package ''{4}''.

ResizeEx_FAILED=[{3}] Failed to change Aws Instance ''{0}'' from type ''{1}'' to type ''{2}''. \
This Aws Instance may not be compatible with such Instance Type.

ResizeMsg_NO_NEED=[{2}] Aws Instance ''{0}'' is already ''{1}''. No need to resize it.


UpdateDiskEx_INVALID_DISK_XPATH=''{0}'': Not accepted. Since this value is not a valid XPath Expression, such value is not a valid. \
Replace it with an XPath Expression, which match some Disk Nodes.

UpdateDiskEx_DETACH=Failed to detach volume ''{0}'' {1} in {2} seconds.

UpdateDiskEx_CREATE=Failed to create volume ''{0}'' {1} in {2} seconds.

UpdateDiskEx_ATTACH=Failed to attach volume ''{0}'' {1} in {2} seconds.

UpdateDiskMsg_NO_INSTANCE=[{2}] No Aws Instance referenced. No Aws Instance to add/remove disks to. \
You should first create an Aws Instance using ''{0}'' Task defined in the package ''{1}''.

UpdateDiskMsg_DISKS_RESUME=[{4}] Aws Instance ''{0}'' Disks are {1} ( \
Need to add : {2}, \
Need to remove : {3} \
).


